{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-paper/lib/module/components/Button\";\nimport DataTable from \"react-native-paper/lib/module/components/DataTable/DataTable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AddEditTask from \"./component/addTask/AddEditTask\";\nimport AddEditRequest from \"./component/addRequest/AddEditRequest\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar optionsPerPage = [2, 3, 4];\nvar data = [{\n  type: \"Congé avec solde\",\n  start: \"22/05/2020\",\n  end: \"01/09/2020\",\n  cause: \"cause\"\n}, {\n  type: \"Congé avec solde\",\n  start: \"05/01/2022\",\n  end: \"01/02/2020\",\n  cause: \"cause\"\n}, {\n  type: \"Congé sans solde\",\n  start: \"06/07/2020\",\n  end: \"01/11/2020\",\n  cause: \"cause\"\n}];\n\nvar TaskScreen = function TaskScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(optionsPerPage[0]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      itemsPerPage = _React$useState4[0],\n      setItemsPerPage = _React$useState4[1];\n\n  React.useEffect(function () {\n    setPage(0);\n  }, [itemsPerPage]);\n  {}\n  return _jsxs(View, {\n    children: [_jsx(AddEditRequest, {}), _jsxs(DataTable, {\n      children: [_jsxs(DataTable.Header, {\n        children: [_jsx(DataTable.Title, {\n          children: \"Type\"\n        }), _jsx(DataTable.Title, {\n          numeric: true,\n          children: \"Date D\\xE9part\"\n        }), _jsx(DataTable.Title, {\n          numeric: true,\n          children: \"Date Finale\"\n        }), _jsx(DataTable.Title, {\n          numeric: true,\n          children: \"Cause\"\n        }), _jsx(DataTable.Title, {\n          numeric: true,\n          style: {\n            marginRight: 10\n          },\n          children: \"Action\"\n        })]\n      }), data.map(function (task, key) {\n        return tableRow(task, key);\n      }), _jsx(DataTable.Pagination, {\n        page: page,\n        numberOfPages: 3,\n        onPageChange: function onPageChange(page) {\n          return setPage(page);\n        },\n        label: \"1-2 of 6\",\n        optionsPerPage: optionsPerPage,\n        itemsPerPage: itemsPerPage,\n        setItemsPerPage: setItemsPerPage,\n        showFastPagination: true,\n        optionsLabel: \"Rows per page\"\n      })]\n    })]\n  });\n\n  function tableRow(task, key) {\n    return _jsxs(DataTable.Row, {\n      children: [_jsx(DataTable.Cell, {\n        children: task.type\n      }), _jsx(DataTable.Cell, {\n        numeric: true,\n        children: task.start\n      }), _jsx(DataTable.Cell, {\n        numeric: true,\n        children: task.end\n      }), _jsx(DataTable.Cell, {\n        numeric: true,\n        children: task.cause\n      }), _jsx(DataTable.Cell, {\n        numeric: true,\n        children: _jsx(Button, {\n          icon: \"delete\",\n          labelStyle: {\n            fontSize: 20\n          }\n        })\n      })]\n    }, key);\n  }\n};\n\nexport default TaskScreen;\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"names":["React","useEffect","useState","AsyncStorage","AddEditTask","AddEditRequest","optionsPerPage","data","type","start","end","cause","TaskScreen","navigation","page","setPage","itemsPerPage","setItemsPerPage","marginRight","map","task","key","tableRow","fontSize","styles","StyleSheet","create","container"],"sources":["C:/Users/Gamer/Desktop/React Project/Projets amis/FerielAbbes/src/screens/RequestScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Button, DataTable } from \"react-native-paper\"\r\n\r\nimport { ScrollView, View, Text, StyleSheet } from \"react-native\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport AddEditTask from \"./component/addTask/AddEditTask\"\r\nimport AddEditRequest from \"./component/addRequest/AddEditRequest\"\r\n\r\nconst optionsPerPage = [2, 3, 4]\r\n\r\nconst data = [\r\n  {\r\n    type: \"Congé avec solde\",\r\n    start: \"22/05/2020\",\r\n    end: \"01/09/2020\",\r\n    cause: \"cause\",\r\n  },\r\n  {\r\n    type: \"Congé avec solde\",\r\n    start: \"05/01/2022\",\r\n    end: \"01/02/2020\",\r\n    cause: \"cause\",\r\n  },\r\n  {\r\n    type: \"Congé sans solde\",\r\n    start: \"06/07/2020\",\r\n    end: \"01/11/2020\",\r\n    cause: \"cause\",\r\n  },\r\n]\r\n\r\nconst TaskScreen = ({ navigation }) => {\r\n  const [page, setPage] = React.useState(0)\r\n  const [itemsPerPage, setItemsPerPage] = React.useState(optionsPerPage[0])\r\n\r\n  React.useEffect(() => {\r\n    setPage(0)\r\n  }, [itemsPerPage])\r\n\r\n  {\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <AddEditRequest />\r\n      <DataTable>\r\n        <DataTable.Header>\r\n          <DataTable.Title>Type</DataTable.Title>\r\n          <DataTable.Title numeric>Date Départ</DataTable.Title>\r\n          <DataTable.Title numeric>Date Finale</DataTable.Title>\r\n          <DataTable.Title numeric>Cause</DataTable.Title>\r\n          <DataTable.Title numeric   style={{marginRight : 10}}>Action</DataTable.Title>\r\n        </DataTable.Header>\r\n\r\n        {data.map((task, key) => tableRow(task, key))}\r\n\r\n        <DataTable.Pagination\r\n          page={page}\r\n          numberOfPages={3}\r\n          onPageChange={(page) => setPage(page)}\r\n          label=\"1-2 of 6\"\r\n          optionsPerPage={optionsPerPage}\r\n          itemsPerPage={itemsPerPage}\r\n          setItemsPerPage={setItemsPerPage}\r\n          showFastPagination\r\n          optionsLabel={\"Rows per page\"}\r\n        />\r\n      </DataTable>\r\n    </View>\r\n  )\r\n\r\n  function tableRow(task, key) {\r\n    return (\r\n      <DataTable.Row key={key}>\r\n        <DataTable.Cell>{task.type}</DataTable.Cell>\r\n        <DataTable.Cell numeric>{task.start}</DataTable.Cell>\r\n        <DataTable.Cell numeric>{task.end}</DataTable.Cell>\r\n        <DataTable.Cell numeric>{task.cause}</DataTable.Cell>\r\n        <DataTable.Cell numeric>\r\n          <Button icon=\"delete\" labelStyle={{ fontSize: 20 }}></Button>\r\n        </DataTable.Cell>\r\n      </DataTable.Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // flex: 1,\r\n    // height: 500,\r\n    // paddingBottom: 50,\r\n    // width: \"100%\",\r\n    // maxWidth: 340,\r\n    // alignSelf: \"center\",\r\n    // alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n  },\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}