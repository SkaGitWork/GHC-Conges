{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text } from \"react-native-paper\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { passwordValidator } from \"../helpers/passwordConfirmValidator\";\nimport { nameValidator } from \"../helpers/nameValidator\";\nimport Axios from \"./../api/axios\";\nimport { passwordConfirmValidator } from \"../helpers/passwordValidator copy\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      feedback = _useState6[0],\n      setFeedback = _useState6[1];\n\n  var _useState7 = useState({\n    value: \"\",\n    error: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordConfirmation = _useState8[0],\n      setPasswordConfirmation = _useState8[1];\n\n  var onSignUpPressed = function onSignUpPressed() {\n    var emailError, passwordError, passwordConfirmError, _await$Axios$post, createdUserId;\n\n    return _regeneratorRuntime.async(function onSignUpPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            emailError = emailValidator(email.value);\n            passwordError = passwordValidator(password.value);\n            passwordConfirmError = passwordConfirmValidator(password.value, passwordConfirmation.value);\n\n            if (!(emailError || passwordError || passwordConfirmError)) {\n              _context.next = 8;\n              break;\n            }\n\n            setEmail(_objectSpread(_objectSpread({}, email), {}, {\n              error: emailError\n            }));\n            setPassword(_objectSpread(_objectSpread({}, password), {}, {\n              error: passwordError\n            }));\n            setPasswordConfirmation(_objectSpread(_objectSpread({}, passwordConfirmation), {}, {\n              error: passwordConfirmError\n            }));\n            return _context.abrupt(\"return\");\n\n          case 8:\n            _context.prev = 8;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(Axios.post(\"/user/signUp\", {\n              email: email.value,\n              password: password.value\n            }));\n\n          case 11:\n            _await$Axios$post = _context.sent;\n            createdUserId = _await$Axios$post.data;\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"user\", JSON.stringify(createdUserId)));\n\n          case 15:\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: \"Edit\"\n              }]\n            });\n            _context.next = 21;\n            break;\n\n          case 18:\n            _context.prev = 18;\n            _context.t0 = _context[\"catch\"](8);\n            setFeedback(_context.t0.response.data);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[8, 18]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(BackButton, {\n      goBack: function goBack() {\n        return navigation.reset({\n          index: 0,\n          routes: [{\n            name: \"StartScreen\"\n          }]\n        });\n      }\n    }), _jsx(Logo, {}), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true\n    }), _jsx(TextInput, {\n      label: \"Password confirm\",\n      returnKeyType: \"done\",\n      value: passwordConfirmation.value,\n      onChangeText: function onChangeText(text) {\n        return setPasswordConfirmation({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!passwordConfirmation.error,\n      errorText: passwordConfirmation.error,\n      secureTextEntry: true\n    }), feedback && _jsx(Text, {\n      children: feedback\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: onSignUpPressed,\n      style: {\n        marginTop: 24\n      },\n      children: \"Sign Up\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        children: \"Already have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"LoginScreen\");\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Login\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    width: \"100%\",\n    maxWidth: 340,\n    alignSelf: \"center\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","emailValidator","passwordValidator","nameValidator","Axios","passwordConfirmValidator","AsyncStorage","RegisterScreen","navigation","value","error","email","setEmail","password","setPassword","feedback","setFeedback","passwordConfirmation","setPasswordConfirmation","onSignUpPressed","emailError","passwordError","passwordConfirmError","post","createdUserId","data","setItem","JSON","stringify","reset","index","routes","name","response","styles","container","text","marginTop","row","navigate","link","StyleSheet","create","flexDirection","fontWeight","color","colors","primary","flex","padding","width","maxWidth","alignSelf","alignItems","justifyContent"],"sources":["C:/Users/Gamer/Desktop/React Project/Projets amis/FerielAbbes/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\"\r\nimport { Text } from \"react-native-paper\"\r\nimport Background from \"../components/Background\"\r\nimport Logo from \"../components/Logo\"\r\nimport Header from \"../components/Header\"\r\nimport Button from \"../components/Button\"\r\nimport TextInput from \"../components/TextInput\"\r\nimport BackButton from \"../components/BackButton\"\r\nimport { theme } from \"../core/theme\"\r\nimport { emailValidator } from \"../helpers/emailValidator\"\r\nimport { passwordValidator } from \"../helpers/passwordConfirmValidator\"\r\nimport { nameValidator } from \"../helpers/nameValidator\"\r\nimport Axios from \"./../api/axios\"\r\nimport { passwordConfirmValidator } from \"../helpers/passwordValidator copy\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\n\r\nexport default function RegisterScreen({ navigation }) {\r\n  const [email, setEmail] = useState({ value: \"\", error: \"\" })\r\n  const [password, setPassword] = useState({ value: \"\", error: \"\" })\r\n  const [feedback, setFeedback] = useState()\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState({\r\n    value: \"\",\r\n    error: \"\",\r\n  })\r\n\r\n  const onSignUpPressed = async () => {\r\n    const emailError = emailValidator(email.value)\r\n    const passwordError = passwordValidator(password.value)\r\n    const passwordConfirmError = passwordConfirmValidator(\r\n      password.value,\r\n      passwordConfirmation.value\r\n      )\r\n    if (emailError || passwordError || passwordConfirmError) {\r\n      setEmail({ ...email, error: emailError })\r\n      setPassword({ ...password, error: passwordError })\r\n      setPasswordConfirmation({\r\n        ...passwordConfirmation,\r\n        error: passwordConfirmError,\r\n      })\r\n      return\r\n    }\r\n\r\n    try {\r\n      const {data : createdUserId} =await Axios.post(\"/user/signUp\", {\r\n        email: email.value,\r\n        password: password.value,\r\n      })\r\n\r\n      await AsyncStorage.setItem(\"user\", JSON.stringify(createdUserId))\r\n      navigation.reset({\r\n        index: 0,\r\n        routes: [{ name: \"Edit\" }],\r\n      })\r\n    } catch (error) {\r\n      setFeedback(error.response.data)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <BackButton goBack={() =>\r\n          navigation.reset({\r\n            index: 0,\r\n            routes: [{ name: \"StartScreen\" }],\r\n          })\r\n        } />\r\n      <Logo />\r\n      {/* <Header>Create Account</Header> */}\r\n      {/* <TextInput\r\n        label=\"Username\"\r\n        returnKeyType=\"next\"\r\n        value={name.value}\r\n        onChangeText={(text) => setName({ value: text, error: '' })}\r\n        error={!!name.error}\r\n        errorText={name.error}\r\n      /> */}\r\n      <TextInput\r\n        label=\"Email\"\r\n        returnKeyType=\"next\"\r\n        value={email.value}\r\n        onChangeText={(text) => setEmail({ value: text, error: \"\" })}\r\n        error={!!email.error}\r\n        errorText={email.error}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n        keyboardType=\"email-address\"\r\n      />\r\n      <TextInput\r\n        label=\"Password\"\r\n        returnKeyType=\"done\"\r\n        value={password.value}\r\n        onChangeText={(text) => setPassword({ value: text, error: \"\" })}\r\n        error={!!password.error}\r\n        errorText={password.error}\r\n        secureTextEntry\r\n      />\r\n      <TextInput\r\n        label=\"Password confirm\"\r\n        returnKeyType=\"done\"\r\n        value={passwordConfirmation.value}\r\n        onChangeText={(text) =>\r\n          setPasswordConfirmation({ value: text, error: \"\" })\r\n        }\r\n        error={!!passwordConfirmation.error}\r\n        errorText={passwordConfirmation.error}\r\n        secureTextEntry\r\n      />\r\n      {feedback && <Text>{feedback}</Text>}\r\n      <Button\r\n        mode=\"contained\"\r\n        onPress={onSignUpPressed}\r\n        style={{ marginTop: 24 }}\r\n      >\r\n        Sign Up\r\n      </Button>\r\n      <View style={styles.row}>\r\n        <Text>Already have an account? </Text>\r\n        <TouchableOpacity onPress={() => navigation.navigate(\"LoginScreen\")}>\r\n          <Text style={styles.link}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: \"row\",\r\n    marginTop: 4,\r\n  },\r\n  link: {\r\n    fontWeight: \"bold\",\r\n    color: theme.colors.primary,\r\n  },\r\n\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    width: \"100%\",\r\n    maxWidth: 340,\r\n    alignSelf: \"center\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}