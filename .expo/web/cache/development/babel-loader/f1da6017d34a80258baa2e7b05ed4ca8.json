{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { Provider } from \"react-native-paper\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { theme } from \"./src/core/theme\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport Tabs from \"./src/navigation/Tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { DrawerContent } from \"./src/navigation/DrawerContent\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport TaskScreen from \"./src/screens/TaskScreen\";\nimport RequestScreen from \"./src/screens/RequestScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  return _jsx(Provider, {\n    theme: theme,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Drawer.Navigator, {\n        initialRouteName: \"TaskScreen\",\n        screenOptions: {\n          headerShown: true,\n          headerStyle: {\n            backgroundColor: \"#4bccc7\"\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {\n            fontWeight: \"bold\"\n          }\n        },\n        drawerContent: function drawerContent(props) {\n          return _jsx(DrawerContent, _objectSpread({}, props));\n        },\n        children: [_jsx(Drawer.Screen, {\n          options: {\n            headerShown: false\n          },\n          name: \"LoginScreen\",\n          component: LoginScreen\n        }), _jsx(Drawer.Screen, {\n          name: \"Tabs\",\n          component: Tabs\n        }), _jsx(Drawer.Screen, {\n          name: \"TaskScreen\",\n          component: TaskScreen\n        }), _jsx(Drawer.Screen, {\n          name: \"RequestScreen\",\n          component: RequestScreen\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","Provider","NavigationContainer","theme","LoginScreen","Tabs","createDrawerNavigator","DrawerContent","createStackNavigator","TaskScreen","RequestScreen","Drawer","App","headerShown","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","props"],"sources":["C:/Users/Gamer/Desktop/React Project/Projets amis/FerielAbbes/App.js"],"sourcesContent":["import \"react-native-gesture-handler\"\r\nimport React from \"react\"\r\nimport { Provider } from \"react-native-paper\"\r\nimport { NavigationContainer } from \"@react-navigation/native\"\r\nimport { theme } from \"./src/core/theme\"\r\nimport LoginScreen from \"./src/screens/LoginScreen\"\r\nimport Tabs from \"./src/navigation/Tabs\"\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\"\r\nimport { DrawerContent } from \"./src/navigation/DrawerContent\"\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport TaskScreen from \"./src/screens/TaskScreen\"\r\nimport RequestScreen from \"./src/screens/RequestScreen\"\r\nconst Drawer = createDrawerNavigator()\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider theme={theme}>\r\n      <NavigationContainer>\r\n        <Drawer.Navigator\r\n          initialRouteName=\"TaskScreen\"\r\n          // initialRouteName=\"LoginScreen\"\r\n          screenOptions={{\r\n            headerShown: true,\r\n\r\n            headerStyle: {\r\n              backgroundColor: \"#4bccc7\",\r\n            },\r\n            headerTintColor: \"#fff\",\r\n            headerTitleStyle: {\r\n              fontWeight: \"bold\",\r\n            },\r\n          }}\r\n          drawerContent={(props) => <DrawerContent {...props} />}\r\n        >\r\n          <Drawer.Screen\r\n            options={{ headerShown: false }}\r\n            name=\"LoginScreen\"\r\n            component={LoginScreen}\r\n          />\r\n          <Drawer.Screen name=\"Tabs\" component={Tabs} />\r\n\r\n          <Drawer.Screen name=\"TaskScreen\" component={TaskScreen} />\r\n          <Drawer.Screen name=\"RequestScreen\" component={RequestScreen} />\r\n        </Drawer.Navigator>\r\n      </NavigationContainer>\r\n    </Provider>\r\n  )\r\n}\r\n"],"mappings":";;;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,KAAT;AACA,OAAOC,WAAP;AACA,OAAOC,IAAP;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,aAAT;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;;;AACA,IAAMC,MAAM,GAAGL,qBAAqB,EAApC;AAEA,eAAe,SAASM,GAAT,GAAe;EAC5B,OACE,KAAC,QAAD;IAAU,KAAK,EAAET,KAAjB;IAAA,UACE,KAAC,mBAAD;MAAA,UACE,MAAC,MAAD,CAAQ,SAAR;QACE,gBAAgB,EAAC,YADnB;QAGE,aAAa,EAAE;UACbU,WAAW,EAAE,IADA;UAGbC,WAAW,EAAE;YACXC,eAAe,EAAE;UADN,CAHA;UAMbC,eAAe,EAAE,MANJ;UAObC,gBAAgB,EAAE;YAChBC,UAAU,EAAE;UADI;QAPL,CAHjB;QAcE,aAAa,EAAE,uBAACC,KAAD;UAAA,OAAW,KAAC,aAAD,oBAAmBA,KAAnB,EAAX;QAAA,CAdjB;QAAA,WAgBE,KAAC,MAAD,CAAQ,MAAR;UACE,OAAO,EAAE;YAAEN,WAAW,EAAE;UAAf,CADX;UAEE,IAAI,EAAC,aAFP;UAGE,SAAS,EAAET;QAHb,EAhBF,EAqBE,KAAC,MAAD,CAAQ,MAAR;UAAe,IAAI,EAAC,MAApB;UAA2B,SAAS,EAAEC;QAAtC,EArBF,EAuBE,KAAC,MAAD,CAAQ,MAAR;UAAe,IAAI,EAAC,YAApB;UAAiC,SAAS,EAAEI;QAA5C,EAvBF,EAwBE,KAAC,MAAD,CAAQ,MAAR;UAAe,IAAI,EAAC,eAApB;UAAoC,SAAS,EAAEC;QAA/C,EAxBF;MAAA;IADF;EADF,EADF;AAgCD"},"metadata":{},"sourceType":"module"}