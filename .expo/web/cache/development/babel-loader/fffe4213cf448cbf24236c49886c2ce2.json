{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-paper/lib/module/components/Button\";\nimport DataTable from \"react-native-paper/lib/module/components/DataTable/DataTable\";\nimport * as ScreenOrientation from \"expo-screen-orientation\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AddEditTask from \"./component/addTask/AddEditTask\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar optionsPerPage = [2, 3, 4];\nvar data = [{\n  type: \"Tâche1\",\n  date: \"06/07/2020 \",\n  start: \"08.52\",\n  end: \"14.00\",\n  cause: \"cause\"\n}, {\n  type: \"Tâche2\",\n  date: \"07/07/2020 \",\n  start: \" 18.00\",\n  end: \" 19.00\",\n  cause: \"cause\"\n}, {\n  type: \"Tâche\",\n  date: \"06/08/2020 \",\n  start: \"20.00\",\n  end: \"08.20\",\n  cause: \"cause\"\n}];\n\nvar TaskScreen = function TaskScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(optionsPerPage[0]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      itemsPerPage = _React$useState4[0],\n      setItemsPerPage = _React$useState4[1];\n\n  React.useEffect(function () {\n    setPage(0);\n  }, [itemsPerPage]);\n  {}\n  return _jsxs(View, {\n    children: [_jsx(AddEditTask, {}), _jsxs(DataTable, {\n      children: [_jsxs(DataTable.Header, {\n        children: [_jsx(DataTable.Title, {\n          children: \"Type\"\n        }), _jsx(DataTable.Title, {\n          numeric: true,\n          children: \"Date\"\n        }), _jsx(DataTable.Title, {\n          numeric: true,\n          children: \"Heure d\\xE9but\"\n        }), _jsx(DataTable.Title, {\n          numeric: true,\n          children: \"Heure fin\"\n        }), _jsx(DataTable.Title, {\n          numeric: true,\n          children: \"Cause\"\n        }), _jsx(DataTable.Title, {\n          style: {\n            paddingRight: 20\n          },\n          numeric: true,\n          children: \"Action\"\n        })]\n      }), data.map(function (task, key) {\n        return tableRow(task, key);\n      }), _jsx(DataTable.Pagination, {\n        page: page,\n        numberOfPages: 3,\n        onPageChange: function onPageChange(page) {\n          return setPage(page);\n        },\n        label: \"1-2 of 6\",\n        optionsPerPage: optionsPerPage,\n        itemsPerPage: itemsPerPage,\n        setItemsPerPage: setItemsPerPage,\n        showFastPagination: true,\n        optionsLabel: \"Rows per page\"\n      })]\n    })]\n  });\n\n  function tableRow(task, key) {\n    return _jsxs(DataTable.Row, {\n      children: [_jsxs(DataTable.Cell, {\n        children: [task.title, \" \"]\n      }), _jsx(DataTable.Cell, {\n        numeric: true,\n        children: task.start\n      }), _jsxs(DataTable.Cell, {\n        numeric: true,\n        children: [\" \", task.start, \" \"]\n      }), _jsxs(DataTable.Cell, {\n        numeric: true,\n        children: [\" \", task.end, \" \"]\n      }), _jsx(DataTable.Cell, {\n        numeric: true,\n        children: _jsx(Button, {\n          icon: \"delete\",\n          style: {\n            paddingLeft: 25\n          },\n          labelStyle: {\n            fontSize: 25,\n            color: \"red\"\n          }\n        })\n      })]\n    }, key);\n  }\n};\n\nexport default TaskScreen;\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"names":["React","useEffect","useState","ScreenOrientation","AsyncStorage","AddEditTask","optionsPerPage","data","type","date","start","end","cause","TaskScreen","navigation","page","setPage","itemsPerPage","setItemsPerPage","paddingRight","map","task","key","tableRow","title","paddingLeft","fontSize","color","styles","StyleSheet","create","container"],"sources":["C:/Users/Gamer/Desktop/React Project/Projets amis/FerielAbbes/src/screens/TaskScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Button, DataTable } from \"react-native-paper\"\r\nimport * as ScreenOrientation from \"expo-screen-orientation\"\r\n\r\nimport { ScrollView, View, Text, StyleSheet } from \"react-native\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport AddEditTask from \"./component/addTask/AddEditTask\"\r\n\r\nconst optionsPerPage = [2, 3, 4]\r\n\r\nconst data = [\r\n  {\r\n    type: \"Tâche1\",\r\n    date: \"06/07/2020 \",\r\n    start: \"08.52\",\r\n    end: \"14.00\",\r\n    cause: \"cause\",\r\n  },\r\n  {\r\n    type: \"Tâche2\",\r\n    date: \"07/07/2020 \",\r\n\r\n    start: \" 18.00\",\r\n    end: \" 19.00\",\r\n    cause: \"cause\",\r\n  },\r\n  {\r\n    type: \"Tâche\",\r\n    date: \"06/08/2020 \",\r\n\r\n    start: \"20.00\",\r\n    end: \"08.20\",\r\n    cause: \"cause\",\r\n  },\r\n]\r\n\r\nconst TaskScreen = ({ navigation }) => {\r\n  const [page, setPage] = React.useState(0)\r\n  const [itemsPerPage, setItemsPerPage] = React.useState(optionsPerPage[0])\r\n\r\n  React.useEffect(() => {\r\n    setPage(0)\r\n  }, [itemsPerPage])\r\n\r\n  {\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <AddEditTask />\r\n      <DataTable>\r\n      <DataTable.Header>\r\n          <DataTable.Title>Type</DataTable.Title>\r\n          <DataTable.Title numeric>Date</DataTable.Title>\r\n          <DataTable.Title numeric>Heure début</DataTable.Title>\r\n          <DataTable.Title numeric>Heure fin</DataTable.Title>\r\n          <DataTable.Title numeric>Cause</DataTable.Title>\r\n          <DataTable.Title style={{ paddingRight: 20 }} numeric>\r\n            Action\r\n          </DataTable.Title>\r\n        </DataTable.Header>\r\n\r\n        {data.map((task, key) => tableRow(task, key))}\r\n\r\n        <DataTable.Pagination\r\n          page={page}\r\n          numberOfPages={3}\r\n          onPageChange={(page) => setPage(page)}\r\n          label=\"1-2 of 6\"\r\n          optionsPerPage={optionsPerPage}\r\n          itemsPerPage={itemsPerPage}\r\n          setItemsPerPage={setItemsPerPage}\r\n          showFastPagination\r\n          optionsLabel={\"Rows per page\"}\r\n        />\r\n      </DataTable>\r\n    </View>\r\n  )\r\n\r\n  function tableRow(task, key) {\r\n    return (\r\n      <DataTable.Row key={key}>\r\n        <DataTable.Cell>{task.title} </DataTable.Cell>\r\n        <DataTable.Cell numeric>{task.start}</DataTable.Cell>\r\n\r\n        <DataTable.Cell numeric> {task.start} </DataTable.Cell>\r\n        <DataTable.Cell numeric> {task.end} </DataTable.Cell>\r\n        <DataTable.Cell numeric>\r\n          <Button\r\n            icon=\"delete\"\r\n            style={{ paddingLeft: 25 }}\r\n            labelStyle={{ fontSize: 25, color: \"red\" }}\r\n          ></Button>\r\n        </DataTable.Cell>\r\n      </DataTable.Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // flex: 1,\r\n    // height: 500,\r\n    // paddingBottom: 50,\r\n    // width: \"100%\",\r\n    // maxWidth: 340,\r\n    // alignSelf: \"center\",\r\n    // alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n  },\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}