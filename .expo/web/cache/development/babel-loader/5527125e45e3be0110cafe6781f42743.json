{"ast":null,"code":"import \"react-native-gesture-handler\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport \"react-native-gesture-handler\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { FontAwesome5 } from \"@expo/vector-icons\";\nimport HomeScreen from \"../screens/TaskScreen\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\nglobal.patient = \"Patient\";\n\nvar Tabs = function Tabs() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"Profile\",\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        display: \"flex\",\n        backgroundColor: \"white\",\n        position: \"absolute\",\n        bottom: 25,\n        marginHorizontal: 20,\n        height: 60,\n        borderRadius: 15,\n        shadowColor: \"#000\",\n        shadowOpacity: 0.06,\n        shadowOffset: {\n          width: 10,\n          height: 10\n        },\n        paddingHorizontal: 20\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: HomeStackScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref) {\n          var focused = _ref.focused;\n          return _jsx(View, {\n            style: {\n              position: \"absolute\",\n              top: 20\n            },\n            children: _jsx(FontAwesome5, {\n              name: \"home\",\n              size: 20,\n              color: focused ? \"#047086\" : \"grey\"\n            })\n          });\n        }\n      },\n      listeners: function listeners(_ref2) {\n        var navigation = _ref2.navigation,\n            route = _ref2.route;\n        return {\n          tabPress: function tabPress(e) {}\n        };\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Edit\",\n      component: EditScreenStack,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var focused = _ref3.focused;\n          return _jsx(View, {\n            style: {\n              position: \"absolute\",\n              top: 20\n            },\n            children: _jsx(FontAwesome5, {\n              name: \"edit\",\n              size: 20,\n              color: focused ? \"#047086\" : \"grey\"\n            })\n          });\n        }\n      },\n      listeners: function listeners(_ref4) {\n        var navigation = _ref4.navigation,\n            route = _ref4.route;\n        return {\n          tabPress: function tabPress(e) {}\n        };\n      }\n    })]\n  });\n};\n\nexport default Tabs;\n\nvar HomeStackScreen = function HomeStackScreen(_ref5) {\n  var navigation = _ref5.navigation;\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#4bccc7\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"Profile\",\n      component: HomeScreen,\n      options: {\n        headerLeft: function headerLeft() {\n          return _jsx(Icon.Button, {\n            name: \"ios-menu\",\n            size: 25,\n            backgroundColor: \"#4bccc7\",\n            onPress: function onPress() {\n              return navigation.openDrawer();\n            }\n          });\n        }\n      }\n    })\n  });\n};\n\nvar EditScreenStack = function EditScreenStack(_ref6) {\n  var navigation = _ref6.navigation;\n  return _jsx(Stack.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#4bccc7\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    children: _jsx(Stack.Screen, {\n      name: \"Edit\",\n      component: EditScreen,\n      options: {\n        headerLeft: function headerLeft() {\n          return _jsx(Icon.Button, {\n            name: \"ios-menu\",\n            size: 25,\n            backgroundColor: \"#4bccc7\",\n            onPress: function onPress() {\n              return navigation.openDrawer();\n            }\n          });\n        }\n      }\n    })\n  });\n};","map":{"version":3,"names":["React","createBottomTabNavigator","FontAwesome5","HomeScreen","createStackNavigator","Icon","Stack","Tab","global","patient","Tabs","showLabel","style","display","backgroundColor","position","bottom","marginHorizontal","height","borderRadius","shadowColor","shadowOpacity","shadowOffset","width","paddingHorizontal","HomeStackScreen","tabBarIcon","focused","top","navigation","route","tabPress","e","EditScreenStack","headerStyle","headerTintColor","headerTitleStyle","fontWeight","headerLeft","openDrawer","EditScreen"],"sources":["C:/Users/Gamer/Desktop/React Project/Projets amis/FerielAbbes/src/navigation/Tabs.js"],"sourcesContent":["import \"react-native-gesture-handler\"\r\nimport React from \"react\"\r\nimport { View } from \"react-native\"\r\nimport \"react-native-gesture-handler\"\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\"\r\nimport { FontAwesome5 } from \"@expo/vector-icons\"\r\nimport HomeScreen from \"../screens/TaskScreen\"\r\nimport { createStackNavigator } from \"@react-navigation/stack\"\r\nimport Icon from \"react-native-vector-icons/Ionicons\"\r\nconst Stack = createStackNavigator()\r\nconst Tab = createBottomTabNavigator()\r\n\r\nglobal.patient = \"Patient\"\r\n\r\nconst Tabs = () => (\r\n  <Tab.Navigator\r\n    initialRouteName=\"Profile\"\r\n    tabBarOptions={{\r\n      showLabel: false,\r\n      style: {\r\n        display: \"flex\",\r\n        backgroundColor: \"white\",\r\n        position: \"absolute\",\r\n        bottom: 25,\r\n        marginHorizontal: 20,\r\n        height: 60,\r\n        borderRadius: 15,\r\n        shadowColor: \"#000\",\r\n        shadowOpacity: 0.06,\r\n        shadowOffset: {\r\n          width: 10,\r\n          height: 10,\r\n        },\r\n        paddingHorizontal: 20,\r\n      },\r\n    }}\r\n  >\r\n    <Tab.Screen\r\n      name={\"Profile\"}\r\n      component={HomeStackScreen}\r\n      options={{\r\n        tabBarIcon: ({ focused }) => (\r\n          <View\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 20,\r\n            }}\r\n          >\r\n            <FontAwesome5\r\n              name=\"home\"\r\n              size={20}\r\n              color={focused ? \"#047086\" : \"grey\"}\r\n            ></FontAwesome5>\r\n          </View>\r\n        ),\r\n      }}\r\n      listeners={({ navigation, route }) => ({\r\n        tabPress: (e) => {},\r\n      })}\r\n    />\r\n\r\n<Tab.Screen\r\n      name={\"Edit\"}\r\n      component={EditScreenStack}\r\n      options={{\r\n        tabBarIcon: ({ focused }) => (\r\n          <View\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 20,\r\n            }}\r\n          >\r\n            <FontAwesome5\r\n              name=\"edit\"\r\n              size={20}\r\n              color={focused ? \"#047086\" : \"grey\"}\r\n            ></FontAwesome5>\r\n          </View>\r\n        ),\r\n      }}\r\n      listeners={({ navigation, route }) => ({\r\n        tabPress: (e) => {},\r\n      })}\r\n    />\r\n\r\n  </Tab.Navigator>\r\n)\r\nexport default Tabs\r\n\r\nconst HomeStackScreen = ({ navigation }) => (\r\n  <Stack.Navigator\r\n    screenOptions={{\r\n      headerStyle: {\r\n        backgroundColor: \"#4bccc7\",\r\n      },\r\n      headerTintColor: \"#fff\",\r\n      headerTitleStyle: {\r\n        fontWeight: \"bold\",\r\n      },\r\n    }}\r\n  >\r\n    <Stack.Screen\r\n      name=\"Profile\"\r\n      component={HomeScreen}\r\n      options={{\r\n        headerLeft: () => (\r\n          <Icon.Button\r\n            name=\"ios-menu\"\r\n            size={25}\r\n            backgroundColor=\"#4bccc7\"\r\n            onPress={() => navigation.openDrawer()}\r\n          ></Icon.Button>\r\n        ),\r\n      }}\r\n    />\r\n  </Stack.Navigator>\r\n)\r\n\r\n\r\nconst EditScreenStack = ({ navigation }) => (\r\n  <Stack.Navigator\r\n    screenOptions={{\r\n      headerStyle: {\r\n        backgroundColor: \"#4bccc7\",\r\n      },\r\n      headerTintColor: \"#fff\",\r\n      headerTitleStyle: {\r\n        fontWeight: \"bold\",\r\n      },\r\n    }}\r\n  >\r\n    <Stack.Screen\r\n      name=\"Edit\"\r\n      component={EditScreen}\r\n      options={{\r\n        headerLeft: () => (\r\n          <Icon.Button\r\n            name=\"ios-menu\"\r\n            size={25}\r\n            backgroundColor=\"#4bccc7\"\r\n            onPress={() => navigation.openDrawer()}\r\n          ></Icon.Button>\r\n        ),\r\n      }}\r\n    />\r\n  </Stack.Navigator>\r\n)\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}