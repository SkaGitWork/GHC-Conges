{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, DataTable } from \"react-native-paper\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport AddEditTask from \"./component/addTask/AddEditTask\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar optionsPerPage = [2, 3, 4];\nvar data = [{\n  title: \"Tâche 1\",\n  start: \"01/01/2020\",\n  end: \"01/01/2020\"\n}, {\n  title: \"Tâche 2\",\n  start: \"01/01/2022\",\n  end: \"01/02/2020\"\n}, {\n  title: \"Tâche 3\",\n  start: \"06/05/2020\",\n  end: \"01/11/2020\"\n}];\n\nfunction changeScreenOrientation() {\n  return _regeneratorRuntime.async(function changeScreenOrientation$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_LEFT));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar TaskScreen = function TaskScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(optionsPerPage[0]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      itemsPerPage = _React$useState4[0],\n      setItemsPerPage = _React$useState4[1];\n\n  React.useEffect(function () {\n    setPage(0);\n    changeScreenOrientation();\n  }, [itemsPerPage]);\n  {}\n  return _jsxs(View, {\n    children: [_jsx(AddEditTask, {}), _jsxs(DataTable, {\n      children: [_jsxs(DataTable.Header, {\n        children: [_jsx(DataTable.Title, {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"T\\xE2che\"\n        }), _jsx(DataTable.Title, {\n          style: {\n            textAlign: \"center\"\n          },\n          numeric: true,\n          children: \"Date D\\xE9part\"\n        }), _jsx(DataTable.Title, {\n          style: {\n            textAlign: \"center\"\n          },\n          numeric: true,\n          children: \"Date Finale\"\n        }), _jsx(DataTable.Title, {\n          style: {\n            textAlign: \"center\"\n          },\n          numeric: true,\n          children: \"Action\"\n        })]\n      }), data.map(function (task, key) {\n        return tableRow(task, key);\n      }), _jsx(DataTable.Pagination, {\n        page: page,\n        numberOfPages: 3,\n        onPageChange: function onPageChange(page) {\n          return setPage(page);\n        },\n        label: \"1-2 of 6\",\n        optionsPerPage: optionsPerPage,\n        itemsPerPage: itemsPerPage,\n        setItemsPerPage: setItemsPerPage,\n        showFastPagination: true,\n        optionsLabel: \"Rows per page\"\n      })]\n    })]\n  });\n\n  function tableRow(task, key) {\n    return _jsxs(DataTable.Row, {\n      children: [_jsxs(DataTable.Cell, {\n        children: [task.title, \" \"]\n      }), _jsxs(DataTable.Cell, {\n        numeric: true,\n        children: [\" \", task.start, \" \"]\n      }), _jsxs(DataTable.Cell, {\n        numeric: true,\n        children: [\" \", task.end, \" \"]\n      }), _jsxs(DataTable.Cell, {\n        style: {\n          textAlign: \"center\"\n        },\n        children: [_jsx(Button, {\n          style: {\n            marginLeft: 45\n          },\n          icon: \"delete\"\n        }), \" \"]\n      })]\n    }, key);\n  }\n};\n\nexport default TaskScreen;\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"names":["React","useEffect","useState","Button","DataTable","AsyncStorage","AddEditTask","optionsPerPage","data","title","start","end","changeScreenOrientation","ScreenOrientation","lockAsync","OrientationLock","LANDSCAPE_LEFT","TaskScreen","navigation","page","setPage","itemsPerPage","setItemsPerPage","textAlign","map","task","key","tableRow","marginLeft","styles","StyleSheet","create","container"],"sources":["C:/Users/Gamer/Desktop/React Project/Projets amis/FerielAbbes/src/screens/TaskScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { Button, DataTable } from \"react-native-paper\"\r\n\r\nimport { ScrollView, View, Text, StyleSheet } from \"react-native\"\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\r\nimport AddEditTask from \"./component/addTask/AddEditTask\"\r\n\r\nconst optionsPerPage = [2, 3, 4]\r\n\r\nconst data = [\r\n  { title: \"Tâche 1\", start: \"01/01/2020\", end: \"01/01/2020\" },\r\n  { title: \"Tâche 2\", start: \"01/01/2022\", end: \"01/02/2020\" },\r\n  { title: \"Tâche 3\", start: \"06/05/2020\", end: \"01/11/2020\" },\r\n]\r\nasync function changeScreenOrientation() {\r\n  await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE_LEFT);\r\n}\r\n\r\nconst TaskScreen = ({ navigation }) => {\r\n  const [page, setPage] = React.useState(0)\r\n  const [itemsPerPage, setItemsPerPage] = React.useState(optionsPerPage[0])\r\n\r\n  React.useEffect(() => {\r\n    setPage(0)\r\n    changeScreenOrientation()\r\n  }, [itemsPerPage])\r\n\r\n  {\r\n  }\r\n\r\n  return (\r\n    <View>\r\n      <AddEditTask />\r\n      <DataTable>\r\n        <DataTable.Header>\r\n          <DataTable.Title style={{ textAlign: \"center\" }}>\r\n            Tâche\r\n          </DataTable.Title>\r\n          <DataTable.Title style={{ textAlign: \"center\" }} numeric>\r\n            Date Départ\r\n          </DataTable.Title>\r\n          <DataTable.Title style={{ textAlign: \"center\" }} numeric>\r\n            Date Finale\r\n          </DataTable.Title>\r\n          <DataTable.Title style={{ textAlign: \"center\" }} numeric>\r\n            Action\r\n          </DataTable.Title>\r\n        </DataTable.Header>\r\n\r\n        {data.map((task, key) => tableRow(task, key))}\r\n\r\n        <DataTable.Pagination\r\n          page={page}\r\n          numberOfPages={3}\r\n          onPageChange={(page) => setPage(page)}\r\n          label=\"1-2 of 6\"\r\n          optionsPerPage={optionsPerPage}\r\n          itemsPerPage={itemsPerPage}\r\n          setItemsPerPage={setItemsPerPage}\r\n          showFastPagination\r\n          optionsLabel={\"Rows per page\"}\r\n        />\r\n      </DataTable>\r\n    </View>\r\n  )\r\n\r\n  function tableRow(task, key) {\r\n    return (\r\n      <DataTable.Row key={key}>\r\n        <DataTable.Cell>{task.title} </DataTable.Cell>\r\n        <DataTable.Cell numeric> {task.start} </DataTable.Cell>\r\n        <DataTable.Cell numeric> {task.end} </DataTable.Cell>\r\n        <DataTable.Cell style={{ textAlign: \"center\" }}>\r\n          <Button style={{ marginLeft: 45 }} icon=\"delete\" />{\" \"}\r\n        </DataTable.Cell>\r\n      </DataTable.Row>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // flex: 1,\r\n    // height: 500,\r\n    // paddingBottom: 50,\r\n    // width: \"100%\",\r\n    // maxWidth: 340,\r\n    // alignSelf: \"center\",\r\n    // alignItems: \"center\",\r\n    // justifyContent: \"center\",\r\n  },\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}